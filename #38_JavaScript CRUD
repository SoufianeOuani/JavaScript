ูู JavaScriptุ ูููุฉ **CRUD** ูู ุงุฎุชุตุงุฑ ูุฃุฑุจุน ุนูููุงุช ุฃุณุงุณูุฉ ุนูุฏ ุงูุชุนุงูู ูุน ุงูุจูุงูุงุช:

* **C**: Create (ุฅูุดุงุก)
* **R**: Read (ูุฑุงุกุฉ)
* **U**: Update (ุชุญุฏูุซ)
* **D**: Delete (ุญุฐู)

ูุณูุดุฑุญ ูุฐู ุงูุนูููุงุช ุจุฃุจุณุท ุทุฑููุฉ ุจุงุณุชุฎุฏุงู **ูุตุฏุฑ ุจูุงูุงุช ุจุณูุท ูุซู ูุตูููุฉ ูู ุงููุงุฆูุงุช (Array of Objects)**.

---

## โ ูุซุงู ุนููู: CRUD ุจุงุณุชุฎุฏุงู JavaScript ููุท

ููุชุฑุถ ุฃููุง ูุนูู ุนูู ุฅุฏุงุฑุฉ ูุงุฆูุฉ ูุณุชุฎุฏููู:

```js
let users = [
  { id: 1, name: "ุฃุญูุฏ" },
  { id: 2, name: "ุณุงุฑุฉ" },
];
```

---

## ๐ข C - Create (ุฅุถุงูุฉ ุนูุตุฑ)

```js
function createUser(name) {
  const newUser = {
    id: users.length + 1,
    name: name
  };
  users.push(newUser);
}

createUser("ูุฑูู");
console.log(users);
```

---

## ๐ก R - Read (ูุฑุงุกุฉ ุงูุนูุงุตุฑ)

### ูู ุงูุนูุงุตุฑ:

```js
users.forEach(user => {
  console.log(user.id + " - " + user.name);
});
```

### ุนูุตุฑ ูุนููู:

```js
const user = users.find(u => u.id === 2);
console.log(user); // ูุทุจุน { id: 2, name: "ุณุงุฑุฉ" }
```

---

## ๐ต U - Update (ุชุญุฏูุซ ุนูุตุฑ)

```js
function updateUser(id, newName) {
  const user = users.find(u => u.id === id);
  if (user) {
    user.name = newName;
  }
}

updateUser(1, "ุฃุญูุฏ ุงูุฌุฏูุฏ");
console.log(users);
```

---

## ๐ด D - Delete (ุญุฐู ุนูุตุฑ)

```js
function deleteUser(id) {
  users = users.filter(u => u.id !== id);
}

deleteUser(2);
console.log(users);
```

---

## โ ูุฎุฑุฌุงุช ุจุนุฏ ุงูุนูููุงุช:

1. **ุฅูุดุงุก ูุฑูู**: `[ {id:1, name:"ุฃุญูุฏ"}, {id:2, name:"ุณุงุฑุฉ"}, {id:3, name:"ูุฑูู"} ]`
2. **ุชุญุฏูุซ ุฃุญูุฏ**: `"ุฃุญูุฏ ุงูุฌุฏูุฏ"`
3. **ุญุฐู ุณุงุฑุฉ**: ุชุฎุชูู ูู ุงููุตูููุฉ

---


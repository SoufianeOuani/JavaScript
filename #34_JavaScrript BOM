في JavaScript، اختصار **BOM** يعني **Browser Object Model**، أي **نموذج كائنات المتصفح**.
وهو يسمح لك بالتفاعل مع **النافذة (window)** والمتصفح نفسه، مثل: التحكم في النوافذ، الروابط، المواقع، الوقت، وغيرها.

---

## 📦 أهم كائنات BOM:

| الكائن                       | الوظيفة الأساسية                        |
| ---------------------------- | --------------------------------------- |
| `window`                     | يمثل نافذة المتصفح. كل شيء تقريبا ضمنه. |
| `navigator`                  | معلومات عن المتصفح والجهاز              |
| `screen`                     | معلومات عن الشاشة (مثل العرض والارتفاع) |
| `location`                   | عنوان URL الحالي، ويمكنك تغييره         |
| `history`                    | التنقل في سجل التصفح (للخلف والأمام)    |
| `alert`, `prompt`, `confirm` | نوافذ تفاعلية                           |
| `setTimeout`, `setInterval`  | تنفيذ أو تكرار كود بعد مدة زمنية        |

---

## ✅ أمثلة شائعة:

### 1. `window.alert()` – رسالة منبثقة:

```js
alert("مرحبًا بك!");
```

### 2. `window.location` – عنوان الصفحة:

```js
console.log(location.href);       // يطبع الرابط الكامل
location.href = "https://google.com"; // ينقل إلى موقع آخر
```

### 3. `navigator` – معلومات عن المتصفح:

```js
console.log(navigator.userAgent);  // نوع الجهاز والمتصفح
```

### 4. `screen` – أبعاد الشاشة:

```js
console.log(screen.width, screen.height);
```

### 5. `history` – التنقل في الصفحات:

```js
history.back();    // يعود للصفحة السابقة
history.forward(); // يذهب للصفحة التالية
```

### 6. مؤقتات:

```js
setTimeout(() => alert("مرحبًا بعد 3 ثواني"), 3000);
setInterval(() => console.log("كل 2 ثانية"), 2000);
```

---

## 🧠 ملاحظات:

* لا تحتاج عادةً لكتابة `window.` لأنّه ضمنيًا موجود.
* BOM مختلف عن **DOM**: الأول يتعامل مع المتصفح، والثاني يتعامل مع عناصر الصفحة.

---


رائع سفيان 🔥، دابا ندوزو نشرحو **arrow functions** فـ JavaScript، بطريقة مبسطة وبالدارجة ديالنا.

---

### ✅ **شنو هي arrow function؟**

**Arrow function** هي طريقة جديدة لكتابة الدوال جات مع ES6. كتخلي الكود مختصر وأنيق.

---

### 🔹 الشكل العادي للدالة:

```js
function greet(name) {
  return "Hello " + name;
}
```

### 🔸 نفس الشي بـ arrow function:

```js
const greet = (name) => {
  return "Hello " + name;
};
```

وإلا كانت الدالة كتدير فقط **return سطر واحد**، تقدر تختصرها أكثر:

```js
const greet = name => "Hello " + name;
```

> ✅ **ما كايناش** كلمة `function`، و**ما خاصكش** تكتب `return` إذا كانت فقط قيمة وحدة.

---

### ✅ **أمثلة عملية:**

```js
const sum = (a, b) => a + b;
console.log(sum(3, 4)); // 7

const sayHi = () => "Hi!";
console.log(sayHi()); // "Hi!"
```

---

### 🚫 مميزات وقيود:

#### ✅ المميزات:
- الكود كيبقى مختصر وواضح.
- مثالية فـ الكولباك (callback):

```js
let numbers = [1, 2, 3];
let doubled = numbers.map(n => n * 2);
console.log(doubled); // [2, 4, 6]
```

---

#### ⚠️ القيود:
- **ما عندهاش `this` خاص بها**:
  - يعني ما تقدرش تستعمل `this` بحال الدوال العادية، وهادشي مهم بزاف فـ `objects` و `classes`.

```js
const person = {
  name: "Sofiane",
  sayHello: () => {
    console.log("Hello " + this.name); // ❌ undefined
  }
};
person.sayHello();
```

✅ الحل؟ استعمل دالة عادية فـ هاد الحالة.

---

### 🔚 الخلاصة:

| خاصية | Arrow Function | دالة عادية |
|--------|----------------|-------------|
| الكتابة | مختصرة | طويلة شوية |
| `this` | كتاخدو من السياق الخارجي | عندها `this` خاص |
| `arguments` | ما كايناش | كاينة |
| فين كتستعمل؟ | الكولباك، map, filter, إلخ | دوال كبيرة، داخل objects/classes |

---


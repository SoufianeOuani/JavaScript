في JavaScript، `setTimeout` و `setInterval` هما دالتان تُستخدمان لتنفيذ الكود **بعد مدة زمنية** أو **بشكل متكرر**. إليك شرحًا بسيطًا وواضحًا لهما:

---

## ⏳ `setTimeout` – تنفيذ مرة واحدة بعد وقت معين

### ✅ الصيغة:

```js
setTimeout(function, delay);
```

* `function`: الكود الذي تريد تنفيذه.
* `delay`: الوقت بالـ **ميلي ثانية** (1000ms = 1 ثانية).

### 🧪 مثال:

```js
setTimeout(() => {
  console.log("مرحبًا بعد 3 ثواني");
}, 3000); // 3 ثواني = 3000 ميلي ثانية
```

---

## 🔁 `setInterval` – تكرار التنفيذ كل فترة زمنية

### ✅ الصيغة:

```js
setInterval(function, interval);
```

* `interval`: كل كم من الوقت تريد تكرار الكود.

### 🧪 مثال:

```js
setInterval(() => {
  console.log("كل 2 ثانية يتم تنفيذ هذا الكود");
}, 2000);
```

---

## ❌ إيقاف `setTimeout` أو `setInterval`

### 📍 تخزين المعرف:

```js
const myTimeout = setTimeout(...);
const myInterval = setInterval(...);
```

### ثم:

```js
clearTimeout(myTimeout);   // لإيقاف setTimeout
clearInterval(myInterval); // لإيقاف setInterval
```

### 🧪 مثال عملي لإيقاف التكرار:

```js
let count = 0;
const intervalId = setInterval(() => {
  console.log("تم التنفيذ");
  count++;
  if (count === 5) {
    clearInterval(intervalId);
    console.log("تم الإيقاف بعد 5 مرات");
  }
}, 1000);
```

---

## 🧠 الفرق بينهما:

| الدالة        | ماذا تفعل؟                          |
| ------------- | ----------------------------------- |
| `setTimeout`  | تنفيذ الكود **مرة واحدة** بعد تأخير |
| `setInterval` | تنفيذ الكود **مرات متكررة** كل فترة |

---


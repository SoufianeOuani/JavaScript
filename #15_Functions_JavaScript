# **🚀 الدوال (Functions) في JavaScript**  

الدوال **تساعدك على إعادة استخدام الكود** وتنظيمه بطريقة أفضل.  

---

## **1️⃣ تعريف دالة باستخدام `function`**
```javascript
function greet() {
    console.log("Hello, world!");
}
greet(); // استدعاء الدالة
```
📌 **الإخراج:**
```
Hello, world!
```

🔹 **`function greet()`** → تعريف الدالة.  
🔹 **`greet();`** → استدعاء الدالة.

---

## **2️⃣ دالة تأخذ معاملات (Parameters)**
يمكنك تمرير **قيم (Arguments)** إلى الدالة.
```javascript
function greet(name) {
    console.log("Hello, " + name + "!");
}
greet("Sofiane");
```
📌 **الإخراج:**
```
Hello, Sofiane!
```

---

## **3️⃣ دالة تُعيد قيمة (`return`)**
```javascript
function add(a, b) {
    return a + b;
}
let result = add(5, 3);
console.log(result); // 8
```
🔹 **`return`** يعيد **القيمة الناتجة** لاستخدامها لاحقًا.

---

## **4️⃣ التعبير عن الدوال (`Function Expression`)**
يمكنك تخزين دالة داخل متغير:
```javascript
let multiply = function(a, b) {
    return a * b;
};
console.log(multiply(4, 3)); // 12
```

---

## **5️⃣ الدوال السهمية (`Arrow Functions`)**
صيغة مختصرة لكتابة الدوال:
```javascript
const multiply = (a, b) => a * b;
console.log(multiply(4, 3)); // 12
```
إذا كان هناك **معامل واحد فقط** يمكنك حذف الأقواس:
```javascript
const square = x => x * x;
console.log(square(5)); // 25
```

---

## **6️⃣ القيم الافتراضية للمعاملات (`Default Parameters`)**
```javascript
function greet(name = "Guest") {
    console.log("Hello, " + name + "!");
}
greet();       // Hello, Guest!
greet("Ali");  // Hello, Ali!
```
🔹 إذا لم يتم تمرير قيمة لـ `name`، سيتم استخدام `"Guest"` كقيمة افتراضية.

---

## **7️⃣ دوال داخل دوال (`Nested Functions`)**
```javascript
function outerFunction() {
    function innerFunction() {
        console.log("I'm inside the outer function!");
    }
    innerFunction();
}
outerFunction();
```

---

## **8️⃣ الدوال كمعامل (`Callback Functions`)**
دوال يتم تمريرها إلى دوال أخرى:
```javascript
function processUserInput(callback) {
    let name = "Sofiane";
    callback(name);
}

processUserInput(function(name) {
    console.log("Hello, " + name);
});
```

---

## **9️⃣ دوال مجهولة (`Anonymous Functions`)**
```javascript
setTimeout(function() {
    console.log("This will run after 2 seconds.");
}, 2000);
```

---

## **🔟 الدوال التكرارية (`Recursive Functions`)**
دالة تستدعي نفسها:
```javascript
function countdown(n) {
    if (n <= 0) {
        console.log("Done!");
        return;
    }
    console.log(n);
    countdown(n - 1);
}
countdown(5);
```
📌 **الإخراج:**
```
5
4
3
2
1
Done!
```

---

## **🎯 متى نستخدم الدوال؟**
✅ عند الحاجة **لإعادة استخدام الكود**.  
✅ لجعل الكود **أكثر تنظيمًا**.  
✅ عند التعامل مع **الأحداث والتفاعلات** في صفحات الويب.  

---

## **🔥 تمارين تطبيقية**
1️⃣ أنشئ دالة **تحسب مساحة المستطيل** وتأخذ الطول والعرض كمدخلات.  
2️⃣ أنشئ دالة تقبل اسم شخص، وإذا لم يتم تمرير اسم، تطبع `"Hello, Guest!"`.  
3️⃣ استخدم **دالة سهمية (`Arrow Function`)** لحساب **مربع العدد**.  
4️⃣ أنشئ **دالة تكرارية** تطبع الأعداد من `n` إلى `1`.  
5️⃣ استخدم **دالة كـ `Callback`** لطباعة `"تم تنفيذ العملية"` بعد **3 ثوانٍ**.  

---

